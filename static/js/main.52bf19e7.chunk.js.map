{"version":3,"sources":["componants/Navigation.js","routes/About.js","componants/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Navigation","to","About","className","Movie","id","year","title","summary","poster","genres","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","setState","data","this","movie","medium_cover_image","React","Component","Detail","props","location","history","console","log","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAWeA,MATf,WACE,OACE,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCASC,MAJf,WACI,OAAO,sBAAMC,UAAY,mBAAlB,2D,gFC2CIC,MAzCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAEjD,OACE,cAAC,IAAD,CAAMT,GAAM,CACVU,SAAQ,iBAAYN,GACpBO,MAAM,CACJN,OACAC,QACAC,UACAC,SACAC,WAPJ,SAUA,sBAAKP,UAAU,QAAf,UACE,qBAAKU,IAAKJ,EAAQK,IAAKP,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACGO,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBd,UAAU,eAA1B,SACGa,GADMC,QAKb,mBAAGd,UAAU,iBAAb,SAA+BK,EAAQU,MAAM,EAAG,gBCyBzCC,G,kNAhDbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,4BAAAC,EAAA,sEAEWC,IAAMC,IACzB,yEAHQ,OAEJJ,EAFI,OAKV,EAAKK,SAAS,CAAEL,OAAQA,EAAOM,KAAKA,KAAKN,OAAQD,WAAW,IALlD,2C,uDAQZ,WAEEQ,KAAKN,c,oBAGP,WAIE,OACE,yBAASnB,UAAU,YAAnB,SACGyB,KAAKhB,MAAMQ,UACV,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGyB,KAAKhB,MAAMS,OAAON,KAAI,SAACc,GAAD,OACrB,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GAjCR0B,IAAMC,YCqBVC,E,uKAtBX,WACI,MAA8BL,KAAKM,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAClBC,QAAQC,IAAIF,QACWG,IAAnBJ,EAASvB,OACTwB,EAAQI,KAAK,O,oBAKrB,WAEI,OADqBZ,KAAKM,MAAlBC,SACKvB,MAEL,+BAAOgB,KAAKM,MAAMC,SAASvB,MAAML,QAI9B,S,GAnBEwB,IAAMC,WCsBZS,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,aAAaE,UAAWX,QCX1CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52bf19e7.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import \"./About.css\";\r\n\r\nfunction About(){\r\n    return <span className = \"about__container\" >About this page: I build it because I movies</span>\r\n}\r\n\r\nexport default About;","\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Movie({ id ,year, title, summary, poster, genres }) {\r\n  \r\n  return (\r\n    <Link to = {{\r\n      pathname :`/movie-${id}`,\r\n      state:{\r\n        year,\r\n        title,\r\n        summary,\r\n        poster,\r\n        genres\r\n      }\r\n    }}>\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres_genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 140)}</p>\r\n      </div>\r\n    </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n\r\n\r\n","\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../componants/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // 비동기 함수 이걸 기다려라\r\n    const movies = await axios.get(\r\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\r\n    ); // 내부에서 기다릴거 await 지정\r\n    this.setState({ movies: movies.data.data.movies, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // JS에게 getMovie()가 시간이 필요하다고\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    // 자바스크립스 class안에서 태그는 className라고 써야함\r\n    /*const{ isLoading } = this.state; \r\n    return <div>{isLoading ? \"Loding\": \"we are ready\"}</div>*/\r\n    return (\r\n      <section className=\"container\">\r\n        {this.state.isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {this.state.movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\n\r\n\r\nclass Detail extends React.Component{\r\n\r\n    componentDidMount(){       \r\n        const { location, history } = this.props;\r\n        console.log(history);\r\n        if (location.state === undefined){\r\n            history.push(\"/\")\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { location } = this.props;\r\n        if (location.state){\r\n            return (\r\n                <span>{this.props.location.state.title}</span>\r\n            )\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import {HashRouter, Route} from \"react-router-dom\";  // 여러가지중 HashRouter을 사용\nimport Navigation from \"./componants/Navigation\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\n\n// Router만들고, 그 안에 스크린을 넣어줌\n// /about path를 가면 컴포넌트 About를 보여줘\n// url를 이용해서 path지정\n// exact={true} 오직 url이 /일때만 Home를 헨더링 해줘\n// 네비게이터를 작동하면 기본적으로 새로고침 이걸 원하지 않기 때문에 a 대신 link 사용\nfunction App() { \n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-:id\" component={Detail} />\n    </HashRouter>\n    )\n  \n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"; // import를 이용해서 가져왔으면 컴포넌트를 추가할 때 파일 이름을 <>해줘야함\n\n// <App />component를 사용할 때 형태\n// 기본적으로 component라 부름 react는 component와 함께 동작\n// 컴포넌트는 HTML을 반환하는 함수\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}